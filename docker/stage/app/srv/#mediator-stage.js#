let Seneca = require('seneca')
Seneca({tag: 'mediator', legacy: {meta: true}, timeout: 5000})
//  .use('zipkin-tracer', {host: 'zipkin', sampling: 1})
//  .use('statsd', {host: 'stats'})
  .use('entity')
  .use('../mediator.js')
  .listen({type: 'htt', port: 8025})
/*
  .client({pin:'role:associate', port:8005})
  .client({pin:'role:descriptor', port:8015})
  .client({pin:'role:properties', port:8030})
  .client({pin:'role:reason', port:8035})
  .client({pin:'role:relation', port:8040})
  .client({pin:'role:associate', host:'associate', port:8005})
  .client({pin:'role:descriptor', host:'descriptor', port:8015})
  .client({pin:'role:properties', host:'properties', port:8030})
  .client({pin:'role:reason', host:'reason', port:8035})
  .client({pin:'role:relation', host:'relation', port:8040})
*/
  .client({pin:'role:associate', host:'associate.default.svc.cluster.local', port:8005})
  .client({pin:'role:descriptor', host:'descriptor.default.svc.cluster.local', port:8015})
  .client({pin:'role:properties', host:'properties.default.svc.cluster.local', port:8030})
  .client({pin:'role:reason', host:'reason.default.svc.cluster.local', port:8035})
  .client({pin:'role:relation', host:'relation.default.svc.cluster.local', port:8040})
